/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import controller.EquipmentController;

import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.awt.Image;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.text.SimpleDateFormat;

/**
 *
 * @author Niraj
 */
public class AddEquipment extends javax.swing.JFrame {
    
    private final EquipmentController equipmentController;
    private final javax.swing.JLabel imageLabel;  // To display the selected image
    private byte[] imageData;

    /**
     * Creates new form AddEquipment
     */
    public AddEquipment() {
        initComponents();
        equipmentController = new EquipmentController(); // Add this line
        equipmentName.requestFocus(); // Set focus to first field
        equipmentName.setText("Enter Name");
        equipmentQuantity.setText("Enter quantity");
//        equipmentPurchaseDate.setToolTipText("Click to select purchase date");
        equipmentPurchaseDate.setDate(null);
//        showDatePlaceholder();
        setupDatePlaceholder();
//        showToolTip();
        setupDateChooser();
        
        
        // Image display label
imageLabel = new javax.swing.JLabel();
imageLabel.setPreferredSize(new java.awt.Dimension(150, 150));
imageLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

// Configure the select button properly
jSelectButton.setText("Choose Photo");
jSelectButton.addActionListener(new java.awt.event.ActionListener() {
    @Override
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        jSelectButtonActionPerformed(evt);
    }
    
    
});
        
    }
    
    private void setupDateChooser() {
        java.util.Calendar maxDate = java.util.Calendar.getInstance();
        equipmentPurchaseDate.setMaxSelectableDate(maxDate.getTime());
        equipmentPurchaseDate.setToolTipText("Select date (cannot be in the future)");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
  
    
       
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jaddEquipment = new javax.swing.JButton();
        equipmentName = new javax.swing.JTextField();
        equipmentQuantity = new javax.swing.JTextField();
        equipmentType = new javax.swing.JComboBox<>();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel6 = new javax.swing.JLabel();
        jSelectButton = new javax.swing.JButton();

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(4, 39, 56));
        jPanel2.setForeground(new java.awt.Color(4, 39, 56));
        jPanel2.setPreferredSize(new java.awt.Dimension(494, 498));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Add New Equipment ");

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Name");
        jLabel2.setPreferredSize(new java.awt.Dimension(145, 25));

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Type");
        jLabel3.setPreferredSize(new java.awt.Dimension(145, 25));

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Quantity");
        jLabel4.setPreferredSize(new java.awt.Dimension(145, 25));

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Purchase Date");
        jLabel5.setPreferredSize(new java.awt.Dimension(145, 25));

        jaddEquipment.setText("Add");
        jaddEquipment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jaddEquipmentActionPerformed(evt);
            }
        });

        equipmentName.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        equipmentName.setText("enter name");
        equipmentName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                equipmentNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                equipmentNameFocusLost(evt);
            }
        });
        equipmentName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equipmentNameActionPerformed(evt);
            }
        });

        equipmentQuantity.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        equipmentQuantity.setText("enter quantity");
        equipmentQuantity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                equipmentQuantityFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                equipmentQuantityFocusLost(evt);
            }
        });
        equipmentQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equipmentQuantityActionPerformed(evt);
            }
        });

        equipmentType.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        equipmentType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Machine", "Weights", "Cardio", "Stretching", "Calisthenic", " " }));
        equipmentType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equipmentTypeActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Image");

        jSelectButton.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jSelectButton.setText("Choose photo");
        jSelectButton.setPreferredSize(new java.awt.Dimension(103, 22));
        jSelectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSelectButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(134, 134, 134)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jSelectButton, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                            .addComponent(equipmentType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(equipmentQuantity)
                            .addComponent(equipmentName))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(357, 357, 357)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addComponent(jaddEquipment)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(equipmentName)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(equipmentType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(equipmentQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jSelectButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jaddEquipment)
                .addContainerGap(72, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void equipmentTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equipmentTypeActionPerformed
        // TODO add your handling code here:
         equipmentQuantity.requestFocus();
        
    }//GEN-LAST:event_equipmentTypeActionPerformed

    private void equipmentNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equipmentNameActionPerformed
        // TODO add your handling code here:
        equipmentType.requestFocus(); 
    }//GEN-LAST:event_equipmentNameActionPerformed

    private void equipmentQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equipmentQuantityActionPerformed
        // TODO add your handling code here:
        equipmentPurchaseDate.requestFocusInWindow();
        
        
    }//GEN-LAST:event_equipmentQuantityActionPerformed

    private void jaddEquipmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jaddEquipmentActionPerformed
        // TODO add your handling code here:
        // 1. Get all input values
//    String name = equipmentName.getText().trim();
//    String type = (String) equipmentType.getSelectedItem();
//    String quantityStr = equipmentQuantity.getText().trim();
//    String date = equipmentPurchaseDate.getText().trim();
//    
//    // 2. Validate inputs
//    if (name.isEmpty() || type.isEmpty() || quantityStr.isEmpty() || date.isEmpty()) {
//        JOptionPane.showMessageDialog(this, "All fields are required!", "Error", JOptionPane.ERROR_MESSAGE);
//        return;
//    }
//    
//    try {
//        // 3. Convert quantity to number
//        int quantity = Integer.parseInt(quantityStr);
//        
//        // 4. Call controller to add equipment
//        boolean success = equipmentController.addEquipment(name, type, quantityStr, date);
//        
//        // 5. Handle result
//        if (success) {
//            JOptionPane.showMessageDialog(this, 
//                "Equipment added successfully!", 
//                "Success", 
//                JOptionPane.INFORMATION_MESSAGE);
//            // Clear form
//            equipmentName.setText("");
//            equipmentQuantity.setText("");
//            equipmentPurchaseDate.setText("");
//            equipmentType.setSelectedIndex(0);
//        } else {
//            JOptionPane.showMessageDialog(this, 
//                "Failed to add equipment", 
//                "Error", 
//                JOptionPane.ERROR_MESSAGE);
//        }
//    } catch (NumberFormatException e) {
//        JOptionPane.showMessageDialog(this, 
//            "Quantity must be a number", 
//            "Error", 
//            JOptionPane.ERROR_MESSAGE);
//    }
String name = equipmentName.getText().trim();
    String type = (String) equipmentType.getSelectedItem();
    String quantityStr = equipmentQuantity.getText().trim();
//    String date = equipmentPurchaseDate.getText().trim();
    
    // 2. Validate all required fields are filled
    if (name.isEmpty() || name.equals("Enter equipment name")) {
        JOptionPane.showMessageDialog(this, "Please enter equipment name", "Error", JOptionPane.ERROR_MESSAGE);
        equipmentName.requestFocus();
        return;
    }
    
    if (type.isEmpty() || type.trim().equals("")) {
        JOptionPane.showMessageDialog(this, "Please select equipment type", "Error", JOptionPane.ERROR_MESSAGE);
        equipmentType.requestFocus();
        return;
    }
    
    if (quantityStr.isEmpty() || quantityStr.equals("Enter quantity")) {
        JOptionPane.showMessageDialog(this, "Please enter quantity", "Error", JOptionPane.ERROR_MESSAGE);
        equipmentQuantity.requestFocus();
        return;
    }
    
//    if (date.isEmpty() || date.equals("YYYY-MM-DD")) {
//        JOptionPane.showMessageDialog(this, "Please enter purchase date", "Error", JOptionPane.ERROR_MESSAGE);
//        equipmentPurchaseDate.requestFocus();
//        return;
//    }
    // Get date from JDateChooser
if (equipmentPurchaseDate.getDate() == null) {
    JOptionPane.showMessageDialog(this, 
        "Please select purchase date", 
        "Error", 
        JOptionPane.ERROR_MESSAGE);
    equipmentPurchaseDate.requestFocusInWindow();
    return;
}

SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
String date = sdf.format(equipmentPurchaseDate.getDate());
    
    // 3. Validate image was selected
    if (imageData == null || imageData.length == 0) {
        JOptionPane.showMessageDialog(this, "Please select an image for the equipment", "Error", JOptionPane.ERROR_MESSAGE);
        jSelectButton.requestFocus();
        return;
    }
    
    // 4. Validate quantity is a positive number
    int quantity;
    try {
        quantity = Integer.parseInt(quantityStr);
        if (quantity <= 0) {
            JOptionPane.showMessageDialog(this, "Quantity must be greater than 0", "Error", JOptionPane.ERROR_MESSAGE);
            equipmentQuantity.requestFocus();
            return;
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Quantity must be a valid number", "Error", JOptionPane.ERROR_MESSAGE);
        equipmentQuantity.requestFocus();
        return;
    }
    
    // 5. Validate date format (basic validation)
//    if (!date.matches("\\d{4}-\\d{2}-\\d{2}")) {
//        JOptionPane.showMessageDialog(this, "Please enter date in YYYY-MM-DD format", "Error", JOptionPane.ERROR_MESSAGE);
//        equipmentPurchaseDate.requestFocus();
//        return;
//    }
    
    // 6. Call controller to add equipment with all data including image
    boolean success = equipmentController.addEquipment(name, type, quantityStr, date, imageData);
    
    // 7. Handle the result
    if (success) {
        JOptionPane.showMessageDialog(this, 
            "Equipment added successfully!", 
            "Success", 
            JOptionPane.INFORMATION_MESSAGE);
        
        // Clear the form for new entry
        equipmentName.setText("Enter equipment name");
        equipmentQuantity.setText("Enter quantity");
//        equipmentPurchaseDate.setText("YYYY-MM-DD");
        equipmentPurchaseDate.setDate(null);
        equipmentType.setSelectedIndex(0);
        imageLabel.setIcon(null);
        imageData = null;
        
        // Set focus back to first field
        equipmentName.requestFocus();
    } else {
        JOptionPane.showMessageDialog(this, 
            "Failed to add equipment. Please try again.", 
            "Error", 
            JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jaddEquipmentActionPerformed

    private void equipmentNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_equipmentNameFocusGained
        // TODO add your handling code here:
         if (equipmentName.getText().equals("Enter Name")) {
         equipmentName.setText("");
    }
    }//GEN-LAST:event_equipmentNameFocusGained

    private void equipmentNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_equipmentNameFocusLost
        // TODO add your handling code here:
        if (equipmentName.getText().isEmpty()) {
        equipmentName.setText("Enter Name");
    }
    }//GEN-LAST:event_equipmentNameFocusLost

    private void equipmentQuantityFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_equipmentQuantityFocusGained
        // TODO add your handling code here:
        if (equipmentQuantity.getText().equals("Enter quantity")) {
        equipmentQuantity.setText("");
    }
    }//GEN-LAST:event_equipmentQuantityFocusGained

    private void equipmentQuantityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_equipmentQuantityFocusLost
        // TODO add your handling code here:
        if (equipmentQuantity.getText().isEmpty()) {
        equipmentQuantity.setText("Enter quantity");
    }
    }//GEN-LAST:event_equipmentQuantityFocusLost

    private void jSelectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSelectButtonActionPerformed
     
            JFileChooser fileChooser = new JFileChooser();
    fileChooser.setDialogTitle("Select Equipment Image");
    
    // Filter for image files only
    FileNameExtensionFilter filter = new FileNameExtensionFilter(
        "Image files", "jpg", "jpeg", "png", "gif");
    fileChooser.setFileFilter(filter);
    
    int result = fileChooser.showOpenDialog(this);
    if (result == JFileChooser.APPROVE_OPTION) {
        try {
            File selectedFile = fileChooser.getSelectedFile();
            // Read the image file into byte array
            imageData = Files.readAllBytes(selectedFile.toPath());
            
            // Display preview - use fixed dimensions for scaling
            ImageIcon icon = new ImageIcon(imageData);
            
            // Set default dimensions if they're not set
            int width = imageLabel.getWidth() > 0 ? imageLabel.getWidth() : 150;
            int height = imageLabel.getHeight() > 0 ? imageLabel.getHeight() : 150;
            
            // Scale the image to fit the label
            Image img = icon.getImage().getScaledInstance(
                width, 
                height, 
                Image.SCALE_SMOOTH);
            imageLabel.setIcon(new ImageIcon(img));
            
            // Add the label to your panel if not already added
            if (imageLabel.getParent() == null) {
                // Create a panel for the image if needed
                JPanel imagePanel = new JPanel();
                imagePanel.add(imageLabel);
                jPanel2.add(imagePanel);
                jPanel2.revalidate();
                jPanel2.repaint();
            }
            
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, 
                "Error loading image: " + ex.getMessage(), 
                "Error", JOptionPane.ERROR_MESSAGE);
        }
        jaddEquipment.requestFocus();
    }                                          
    }//GEN-LAST:event_jSelectButtonActionPerformed

    private void equipmentPurchaseDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_equipmentPurchaseDateFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_equipmentPurchaseDateFocusGained

    private void equipmentPurchaseDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_equipmentPurchaseDateFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_equipmentPurchaseDateFocusLost
    
    // Place this with your other private methods

//    private void setupDatePlaceholder() {
//    JTextField dateText = ((JTextField)equipmentPurchaseDate.getDateEditor().getUiComponent());
//    dateText.setText("Select date");
//    dateText.setForeground(Color.GRAY);
//    dateText.setFont(dateText.getFont().deriveFont(Font.ITALIC));
//    
//    dateText.addFocusListener(new FocusAdapter() {
//        @Override
//        public void focusGained(FocusEvent e) {
//            if (equipmentPurchaseDate.getDate() == null) {
//                dateText.setText("");
//                dateText.setForeground(Color.BLACK);
//                dateText.setFont(dateText.getFont().deriveFont(Font.PLAIN));
//            }
//            hideToolTip();
//        }
//        
//        @Override
//        public void focusLost(FocusEvent e) {
//            if (equipmentPurchaseDate.getDate() == null) {
//                dateText.setText("Select date");
//                dateText.setForeground(Color.GRAY);
//                dateText.setFont(dateText.getFont().deriveFont(Font.ITALIC));
//            }
//            showToolTip();
//        }
//    });
//}
//
//private void showToolTip() {
//    equipmentPurchaseDate.setToolTipText("Click to select purchase date");
//}
//
//private void hideToolTip() {
//    equipmentPurchaseDate.setToolTipText(null);
//}
    
   private void setupDatePlaceholder() {
    JTextField dateText = ((JTextField)equipmentPurchaseDate.getDateEditor().getUiComponent());
    
    // Set placeholder styling to match other fields
    dateText.setText("Select date");
    dateText.setForeground(new Color(153, 153, 153)); // Light gray like other placeholders
    dateText.setFont(new Font("Segoe UI", Font.ITALIC, 12)); // Match your other fields' font
    
    // Set initial tooltip
    equipmentPurchaseDate.setToolTipText("Click to select purchase date");
    
    dateText.addFocusListener(new FocusAdapter() {
        @Override
        public void focusGained(FocusEvent e) {
            if (equipmentPurchaseDate.getDate() == null) {
                dateText.setText("");
                dateText.setForeground(Color.BLACK); // Normal text color when typing
                dateText.setFont(new Font("Segoe UI", Font.PLAIN, 12)); // Normal font when focused
            }
            // Hide tooltip when focused
            equipmentPurchaseDate.setToolTipText(null);
        }
        
        @Override
        public void focusLost(FocusEvent e) {
            if (equipmentPurchaseDate.getDate() == null) {
                dateText.setText("Select date");
                dateText.setForeground(new Color(153, 153, 153)); // Light gray placeholder
                dateText.setFont(new Font("Segoe UI", Font.ITALIC, 12)); // Italic placeholder
            }
            // Show tooltip when focus is lost
            equipmentPurchaseDate.setToolTipText("Click to select purchase date");
        }
    });
    
    // Handle date changes
    equipmentPurchaseDate.addPropertyChangeListener("date", evt -> {
        if (equipmentPurchaseDate.getDate() != null) {
            dateText.setForeground(Color.BLACK);
            dateText.setFont(new Font("Segoe UI", Font.PLAIN, 12));
        } else {
            dateText.setForeground(new Color(153, 153, 153));
            dateText.setFont(new Font("Segoe UI", Font.ITALIC, 12));
            dateText.setText("Select date");
        }
    });
}
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddEquipment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddEquipment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddEquipment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddEquipment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddEquipment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField equipmentName;
    private javax.swing.JTextField equipmentQuantity;
    private javax.swing.JComboBox<String> equipmentType;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JButton jSelectButton;
    private javax.swing.JButton jaddEquipment;
    // End of variables declaration//GEN-END:variables


}
